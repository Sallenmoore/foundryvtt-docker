---

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
  schedule:
    - cron: '0 10 * * *'  # everyday at 10am

permissions:
  actions: read
  contents: read

jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      go_version: ${{ steps.store.outputs.go_version }}
      normal_data_artifact_name: ${{ steps.store.outputs.normal_data_artifact_name }}
      normal_image_artifact_name: ${{ steps.store.outputs.normal_image_artifact_name }}
      pre_installed_data_artifact_name: ${{ steps.store.outputs.pre_installed_data_artifact_name }}
      pre_installed_image_artifact_name: ${{ steps.store.outputs.pre_installed_image_artifact_name }}
      python_version: ${{ steps.store.outputs.python_version }}
      shfmt_version: ${{ steps.store.outputs.shfmt_version }}
    steps:
    - name: Store values
      id: store
      run: |
        echo ::set-output name=go_version::1.16
        echo ::set-output name=normal_data_artifact_name::normal-data
        echo ::set-output name=normal_image_artifact_name::normal-test-image
        echo ::set-output name=pre_installed_data_artifact_name::pre-installed-data
        echo ::set-output name=pre_installed_image_artifact_name::pre-installed-test-image
        echo ::set-output name=python_version::3.9
        echo ::set-output name=shfmt_version::v3.4.3

  metadata:
    uses: ./.github/workflows/_metadata.yml

  lint:
    uses: ./.github/workflows/_lint.yml
    with:
      go_version: ${{ needs.steps.config.outputs.go_version }}
      python_version: ${{ needs.steps.config.outputs.python_version }}
      shfmt_version: ${{ needs.steps.config.outputs.shfmt_version }}

  build-normal-test-image:
    uses: ./.github/workflows/_build-docker-test-image.yml
    with:
      artifact_name: ${{ needs.steps.config.outputs.normal_image_artifact_name }}
    secrets:
      build_args: |
        VERSION=${{ needs.metadata.outputs.source_version }}

  build-pre-installed-test-image:
    uses: ./.github/workflows/_build-docker-test-image.yml
    with:
      artifact_name: ${{ needs.steps.config.outputs.pre_installed_image_artifact_name }}
    secrets:
      artifact_key: ${{ secrets.ARTIFACT_KEY }}
      build_args: |
        FOUNDRY_PASSWORD=${{ secrets.FOUNDRY_PASSWORD }}
        FOUNDRY_USERNAME=${{ secrets.FOUNDRY_USERNAME }}
        VERSION=${{ needs.metadata.outputs.source_version }}

  test-normal-image:
    needs: [build-normal-test-image]
    uses: ./.github/workflows/_test-image.yml
    with:
      data_artifact_name: ${{ needs.steps.config.outputs.normal_data_artifact_name }}
      image_artifact_name: ${{ needs.steps.config.outputs.normal_image_artifact_name }}
    secrets:
      data_artifact_key: ${{ secrets.ARTIFACT_KEY }}
      foundry_password: ${{ secrets.FOUNDRY_PASSWORD }}
      foundry_username: ${{ secrets.FOUNDRY_USERNAME }}

  test-pre-installed-image:
    needs: [build-pre-installed-test-image]
    uses: ./.github/workflows/_test-image.yml
    with:
      data_artifact_name: ${{ needs.steps.config.outputs.pre_installed_data_artifact_name }}
      image_artifact_name: ${{ needs.steps.config.outputs.pre_installed_image_artifact_name }}
    secrets:
      data_artifact_key: ${{ secrets.ARTIFACT_KEY }}
      image_artifact_key: ${{ secrets.ARTIFACT_KEY }}

  # build-and-push:
  #   needs: [lint, prepare, test-normal, test-pre-install, check-docker-secrets]
