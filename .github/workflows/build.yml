---
name: build

on:
  push:
  pull_request:
  repository_dispatch:
    types: [apb]

env:
  PIP_CACHE_DIR: ~/.cache/pip
  PRE_COMMIT_CACHE_DIR: ~/.cache/pre-commit

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: cisagov/setup-env-github-action@develop
      - uses: actions/checkout@v2
      - id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      # GO_VERSION and GOCACHE are used by the cache task, so the Go
      # installation must happen before that.
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'
      - name: Store installed Go version
        run: |
          echo "GO_VERSION="\
          "$(go version | sed 's/^go version go\([0-9.]\+\) .*/\1/')" \
          >> $GITHUB_ENV
      - name: Lookup Go cache directory
        id: go-cache
        run: |
          echo "::set-output name=dir::$(go env GOCACHE)"
      - uses: actions/cache@v2
        env:
          BASE_CACHE_KEY: "${{ github.job }}-${{ runner.os }}-\
            py${{ steps.setup-python.outputs.python-version }}-\
            go${{ env.GO_VERSION }}-"
        with:
          path: |
            ${{ env.PIP_CACHE_DIR }}
            ${{ env.PRE_COMMIT_CACHE_DIR }}
            ${{ steps.go-cache.outputs.dir }}
          key: "${{ env.BASE_CACHE_KEY }}\
            ${{ hashFiles('**/requirements-test.txt') }}-\
            ${{ hashFiles('**/requirements.txt') }}-\
            ${{ hashFiles('**/.pre-commit-config.yaml') }}"
          restore-keys: |
            ${{ env.BASE_CACHE_KEY }}
      - name: Install shfmt
        run: go install mvdan.cc/sh/v3/cmd/shfmt@${SHFMT_VERSION}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade --requirement requirements-test.txt
      - name: Set up pre-commit hook environments
        run: pre-commit install-hooks
      - name: Run pre-commit on all files
        run: pre-commit run --all-files
